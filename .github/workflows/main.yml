# 20210419
# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      with:
        repository: NationalSecurityAgency/Ghidra

    # Runs a single command using the runners shell
    - name: update
      run: |
        sudo apt-get update
        sudo apt-get install -y bison \
        build-essential \
        curl \
        flex \
        g++ \
        gcc \
        git \
        make \
        software-properties-common \
        unzip \
        wget \
        xvfb

    - name: install java
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: init
      uses: eskatos/gradle-command-action@v1
      with:
        gradle-version: 6.8.3
        arguments: --init-script gradle/support/fetchDependencies.gradle init

    - name: yajswDevUnpack
      uses: eskatos/gradle-command-action@v1
      with:
        gradle-version: 6.8.3
        arguments: yajswDevUnpack

    - name: buildGhidra
      uses: eskatos/gradle-command-action@v1
      with:
        gradle-version: 6.8.3
        arguments: buildGhidra -PallPlatforms

    - name: rename
      run: cd build/dist && mv $(ls *.zip) ghidra.zip

    - name: Deploy
      uses: WebFreak001/deploy-nightly@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # automatically provided by github actions
      with:
        upload_url: https://uploads.github.com/repos/HappyASR/BuildGhidra/releases/25426605/assets{?name,label} # find out this value by opening https://api.github.com/repos/<owner>/<repo>/releases in your browser and copy the full "upload_url" value including the {?name,label} part
        release_id: 25426605 # same as above (id can just be taken out the upload_url, it's used to find old releases)
        asset_path: build/dist/ghidra.zip # path to archive to upload
        asset_name: ghidra-build-$$.zip # name to upload the release as, use $$ to insert date (YYYYMMDD) and 6 letter commit hash
        asset_content_type: application/zip # required by GitHub API
        max_releases: 7 # optional, if there are more releases than this matching the asset_name, the oldest ones are going to be deleted
